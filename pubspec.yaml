name: horseandriderscompanion
description: A Site to Record Riders and Horses's progress. Allows you to let trainers and
  others to update your progress or your horses. As well, it provides resources
  to further educaion.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 1.0.0+1

environment:
  sdk: '>=2.18.2 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  authentication_repository:
    path: packages/authentication_repository
  database_repository:
    path: packages/database_repository
  form_inputs:
    path: packages/form_inputs
  cache:
    path: packages/cache

  flutter:
    sdk: flutter

  bloc: ^8.1.0

  equatable: ^2.0.3

  flutter_bloc: ^8.1.1
  flutter_launcher_icons: ^0.13.1
  font_awesome_flutter: ^10.1.0

  flow_builder: ^0.0.9
  formz: ^0.4.0

  firebase_core: ^2.8.0
  firebase_storage: ^11.0.6
  cloud_firestore: ^4.1.0
  firebase_auth: ^4.3.0

  google_maps_flutter: ^2.2.3
  google_maps_webservice_ex: ^0.0.1+2
  google_fonts: ^4.0.3
  google_mobile_ads: ^3.0.0
  google_sign_in: ^6.0.2

  meta: ^1.8.0
  metadata_fetch: ^0.4.1
  url_launcher: ^6.1.7
  image_picker: ^1.0.4
  numberpicker: ^2.1.1
  intl: any
  cached_network_image: ^3.2.3
  timeago: ^3.3.0
  flutter_typeahead: ^4.3.6
  flutter_native_splash: ^2.2.19
  shared_preferences: ^2.0.18
  flutter_localizations:
    sdk: flutter
  intl_utils: ^2.8.2
  open_mail_app: ^0.4.5
  mockito: ^5.3.2
  responsive_framework: ^1.1.1
  animations: ^2.0.7
  flutter_expandable_fab: ^2.0.0
  flutter_layout_grid: ^2.0.5
  auto_size_text: ^3.0.0
  easy_search_bar: ^2.5.0

dev_dependencies:
  bloc_test: ^9.0.0
  flutter_test:
    sdk: flutter
  mocktail: ^1.0.1
  very_good_analysis: ^5.0.0+1

flutter:
  generate: true
  uses-material-design: true
  assets:
    - assets/

  fonts:
    - family: HorseAndRiderIcons
      fonts:
        - asset: fonts/HorseAndRiderIcons.ttf
flutter_icons:
  #  image_path: "assets/horse_logo.png"
  image_path_android: "assets/horse_logo.png"
  image_path_ios: "assets/horse_logo.png"
  android: true # can specify file name here e.g. "ic_launcher"
  ios: true # can specify file name here e.g. "My-Launcher-Icon"
  min_sdk_android: 21 # android min sdk min:16, default 21
  remove_alpha_ios: true
  web:
    generate: true
    image_path: "assets/horse_logo.png"
    background_color: "#596475"
    theme_color: "#596475"
  windows:
    generate: true
    image_path: "assets/horse_logo.png"
    icon_size: 48 # min:48, max:256, default: 48
  macos:
    generate: true
    image_path: "assets/horse_logo.png"

flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove
  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#E8E8E8"
 # background_image: "assets/splash_image_light.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.
  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/splash_image_light.png
  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
  # see the Android 12 section below.
  #branding: assets/dart.png
  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom
  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#2E2E2E"
  #background_image_dark: "assets/dark-background.png"
  image_dark: assets/splash_image_dark.png
  #branding_dark: assets/dart_dark.png
  # Android 12 handles the splash screen differently than previous versions.  Please visit
  # https://developer.android.com/guide/topics/ui/splash-screen
  # Following are Android 12 specific parameter.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 640 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.
    image: assets/splash_image_light.png
    # Splash screen background color.
    color: "#FFFFFF"
    # App icon background color.
    #icon_background_color: "#111111"
    # The branding property allows you to specify an image used as branding in the splash screen.
    #branding: assets/dart.png
    # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that
    # apply when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above.
    image_dark: assets/splash_image_dark.png
    color_dark: "#242526"
    #icon_background_color_dark: "#eeeeee"
  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: true
  #ios: true
  #web: true
  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter.  You may specify all, selected, or none of these parameters:
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_android: assets/splash_image_dark.png
  #image_dark_android: assets/splash-invert-android.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-invert-ios.png
  #image_web: assets/splash-web.png
  #image_dark_web: assets/splash-invert-web.png
  #background_image_android: "assets/background-android.png"
  #background_image_dark_android: "assets/dark-background-android.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/dark-background-ios.png"
  #background_image_web: "assets/background-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  #branding_android: assets/brand-android.png
  #branding_dark_android: assets/dart_dark-android.png
  #branding_ios: assets/brand-ios.png
  #branding_dark_ios: assets/dart_dark-ios.png
  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  web_image_mode: center
  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape
  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true
  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'
flutter_intl:
  enabled: true
  localizely:
    project_id: ad6c1ed5-485f-4d15-b7e6-371baeda80f3
